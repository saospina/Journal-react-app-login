{"version":3,"sources":["firebase/firebase-config.js","hooks/useForm.js","types/types.js","actions/auth.js","actions/ui.js","components/auth/LoginScreen.js","thunks/authThunk.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","actions/notes.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","helpers/loadNotes.js","helpers/fileUpload.js","thunks/notesThunk.js","components/journal/SideBar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthPrivider","auth","GoogleAuthProvider","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","types","login","uid","displayName","type","payload","setErrorAction","err","finishLoadingAction","LoginScreen","dispatch","useDispatch","loading","useSelector","state","ui","email","password","formValues","className","onSubmit","e","preventDefault","a","signInWithEmailAndPassword","response","user","Swal","fire","message","console","error","startLoginEmailPass","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","then","src","alt","to","registerValues","password2","RegisterScreen","msgError","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","log","catch","startRegisterWithEmailPassName","AuthRouter","exact","path","component","activeNoteAction","id","note","setNotesAction","notes","refreshNoteAction","JournalEntry","date","title","body","url","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","loadNotes","collection","get","notesSnap","forEach","snapChild","push","data","fileUpload","file","formData","FormData","append","fetch","method","ok","json","result","secure_url","startLoadingNotes","SideBar","signOut","getState","newNote","Date","getTime","add","docRef","NotesAppBar","active","display","files","startUploading","document","getElementById","click","noteToFirestore","doc","update","startSaveNote","NoteScreen","refActiveId","useRef","useEffect","current","autoFocus","cols","rows","NothingSelected","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render"],"mappings":"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","file":"static/js/main.90a45e60.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBycbV0-4Ncvec2PB-r5u7-CfcL02v7QfM\",\n    authDomain: \"react-app-courses-10fb9.firebaseapp.com\",\n    projectId: \"react-app-courses-10fb9\",\n    storageBucket: \"react-app-courses-10fb9.appspot.com\",\n    messagingSenderId: \"452559302710\",\n    appId: \"1:452559302710:web:03e7b58fd601e45a6de897\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthPrivider = new firebase.auth.GoogleAuthProvider();\n\nexport {\n    db,\n    googleAuthPrivider,\n    firebase\n}\n","import { useState } from 'react';\n\n\nexport const useForm = (initialState = {}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = (newFormState = initialState ) => {\n        setValues(newFormState);\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n\n    }\n\n    return [values, handleInputChange, reset];\n\n}","export const types = {\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set error',\n    uiRemoveError: '[UI] Remove error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesAddNewEntry: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load notes',\n    notesUpdated: '[Notes] Updated note',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutCleaning: '[Notes] Logout cleaning'\n}","import { firebase, googleAuthPrivider } from '../firebase/firebase-config';\nimport { types } from '../types/types';\n\n\nexport const login = (uid, displayName) => (\n    {\n        type: types.login,\n        payload: { uid, displayName }\n    }\n);\n\nexport const startGoogleLogin = () => {\n    return (dispatch) => {\n        firebase.auth().signInWithPopup(googleAuthPrivider)\n            .then(({ user }) => {\n                dispatch(\n                    login(user.uid, user.displayName)\n                )\n            })\n    }\n};\n\nexport const logoutAction = () => ({\n    type: types.logout\n})\n\n\n","import { types } from '../types/types';\n\n\nexport const setErrorAction = (err) => ({\n    type: types.uiSetError,\n    payload: err\n});\n\nexport const removeErrorAction = () => ({\n    type: types.uiRemoveError\n})\n\nexport const startLoadingAction = () => ({\n    type: types.uiStartLoading\n})\nexport const finishLoadingAction = () => ({\n    type: types.uiFinishLoading\n})\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useForm } from '../../hooks/useForm';\nimport { startGoogleLogin } from '../../actions/auth';\nimport { startLoginEmailPass } from '../../thunks/authThunk';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const { loading } = useSelector(state => state.ui);\n\n    const [formValues, handleInputChange] = useForm({\n        email: 'se@yo.com',\n        password: '123456'\n    });\n\n    const { email, password } = formValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLoginEmailPass(email, password));\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch(startGoogleLogin())\n    }\n\n    return (\n        <div>\n            <h3 className=\"auth__title\">Login Screen</h3>\n            <form onSubmit={handleLogin}>\n                <input\n                    className=\"auth__input\"\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n                <input\n                    className=\"auth__input\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    autoComplete=\"off\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n                <button\n                    className=\"btn btn-primary btn-block\"\n                    type=\"submit\"\n                    disabled={loading}\n                >\n                    Login\n                </button>\n                <hr className=\"auth__line\" />\n                <div className=\"auth__social-networks\">\n                    <p>Social network</p>\n                    <div\n                        className=\"google-btn\"\n                        onClick={handleGoogleLogin}\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n                <Link\n                    className=\"link\"\n                    to=\"/auth/register\">\n                    Create new account\n                </Link>\n            </form>\n        </div>\n    )\n}\n","import { firebase } from '../firebase/firebase-config';\nimport Swal from 'sweetalert2';\n\nimport { login, logoutAction } from '../actions/auth';\nimport { startLoadingAction, finishLoadingAction } from '../actions/ui';\n\n\nexport const startRegisterWithEmailPassName = (email, password, name) => {\n\n    return (dispatch) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(async ({ user }) => {\n                await user.updateProfile({ displayName: name });\n                console.log(user);\n                dispatch(login(user.uid, user.displayName))\n            })\n            .catch(e => {\n                console.error(e);\n                Swal.fire('Error!', e.message, 'error')\n\n            })\n    }\n\n};\n\nexport const startLoginEmailPass = (email, password) => async (dispatch) => {\n    try {\n        dispatch(startLoadingAction());\n        const response = await firebase.auth().signInWithEmailAndPassword(email, password);\n        const { user } = response;\n        dispatch(login(user.uid, user.displayName));\n        dispatch(finishLoadingAction());\n    } catch (error) {\n        dispatch(finishLoadingAction());\n        Swal.fire('Error!', error.message, 'error')\n        console.error(error);\n    }\n};\n\nexport const startLogut = () => async (dispatch) => {\n\n    try {\n        await firebase.auth().signOut();\n        dispatch(logoutAction());\n    } catch (error) {\n        console.error(error);\n    }\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\n\nimport { useForm } from '../../hooks/useForm';\nimport { setErrorAction, removeErrorAction } from '../../actions/ui';\nimport { startRegisterWithEmailPassName } from '../../thunks/authThunk';\n\nconst registerValues = {\n    name: 'sergio',\n    email: 'se@yo.com',\n    password: '123456',\n    password2: '123456'\n}\n\nexport const RegisterScreen = () => {\n\n    const { msgError } = useSelector(state => state.ui);\n    const dispatch = useDispatch();\n    const [formValues, handleInputChange] = useForm(registerValues)\n    const { name, email, password, password2 } = formValues;\n\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        if (isFormValid()) {\n            dispatch(startRegisterWithEmailPassName(email, password, name))\n        }\n    };\n\n    const isFormValid = () => {\n\n        if (name.trim().length <= 2) {\n            dispatch(setErrorAction('Name is required'));\n            return false;\n        } else if (!validator.isEmail(email)) {\n            dispatch(setErrorAction('Email is not valid'));\n            return false;\n        } else if (password !== password2 && password.length < 5) {\n            dispatch(setErrorAction('Password should contains at least 6 charaters'));\n            return false;\n        }\n        dispatch(removeErrorAction())\n        return true\n    }\n\n    return (\n        <div>\n            <h3 className=\"auth__title\">Register Screen</h3>\n            <form onSubmit={handleRegister}>\n\n                {\n                    msgError &&\n                    (\n                        <div className=\"auth__alert-error\">\n                            Error: {msgError}\n                        </div>\n                    )\n                }\n\n                <input\n                    className=\"auth__input\"\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleInputChange}\n                />\n                <input\n                    className=\"auth__input\"\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n                <input\n                    className=\"auth__input\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    autoComplete=\"off\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n                <input\n                    className=\"auth__input\"\n                    type=\"password\"\n                    placeholder=\"Confirm\"\n                    name=\"password2\"\n                    autoComplete=\"off\"\n                    value={password2}\n                    onChange={handleInputChange}\n                />\n                <button\n                    className=\"btn btn-primary btn-block\"\n                    type=\"submit\"\n                >\n                    Login\n            </button>\n                <hr className=\"auth__line mb-5\" />\n                <Link\n                    className=\"link\"\n                    to=\"/auth/login\">\n                    Login\n            </Link>\n            </form>\n        </div>\n\n    )\n}\n","import React from 'react';\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route exact path=\"/auth/login\" component={LoginScreen} />\n                    <Route exact path=\"/auth/register\" component={RegisterScreen} />\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\nexport const activeNoteAction = (id, note) => ({\n    type: types.notesActive,\n    payload: { id, ...note }\n});\n\nexport const setNotesAction = (notes) => ({\n    type: types.notesLoad,\n    payload: notes\n});\n\nexport const refreshNoteAction = (id, note) => ({\n    type: types.notesUpdated,\n    payload: { id, note: { id, ...note } }\n})\n\n\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\n\nimport { activeNoteAction } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n\n    const dispatch = useDispatch();\n\n    const noteDate = moment(date);\n\n    const handleEntryClick = () => {\n        dispatch(activeNoteAction(id, { date, title, body, url }))\n    }\n\n    return (\n        <div\n            className=\"journal__entry pointer\"\n            onClick={handleEntryClick}\n        >\n            {\n                url &&\n                <div\n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${url})`\n                    }}\n                ></div>\n            }\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    {title}\n                </p>\n                <p className=\"journal__entry-content\">\n                    {body}\n                </p>\n            </div>\n            <div className=\"journal__entry-date-box\">\n                <span>{noteDate.format('dddd')}</span>\n                <h4>{noteDate.format('D')}</h4>\n\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const {notes} = useSelector( state => state.notes );\n\n    return (\n        <div className=\"journal__entries\">\n            {\n                notes.map(note => (\n                    <JournalEntry \n                    key={note.id}\n                    {...note}\n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import { db } from '../firebase/firebase-config';\n\n\nexport const loadNotes = async (uid) => {\n\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\n    const notes = [];\n    notesSnap.forEach(snapChild => {\n        notes.push({\n            id: snapChild.id,\n            ...snapChild.data()\n        })\n    })\n    \n\n    return notes;\n}","export const fileUpload = async (file) => {\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/anthony92/upload';\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"upload_preset\", \"react-journal\");\n\n    try {\n        const response = await fetch(cloudUrl, {\n            method: 'POST',\n            body: formData\n        });\n        if (response.ok) {\n            let result = await response.json();\n            return result.secure_url;\n        } else {\n            throw await response.json();\n        }\n    } catch (err) {\n        console.error(err);\n        \n    }\n}","import { db } from \"../firebase/firebase-config\";\nimport Swal from \"sweetalert2\";\n\nimport { activeNoteAction, setNotesAction, refreshNoteAction } from '../actions/notes';\nimport { loadNotes } from '../helpers/loadNotes';\nimport { fileUpload } from '../helpers/fileUpload';\n\n\nexport const startNewNote = () => async (dispatch, getState) => {\n    try {\n        // getState() segundo argumento en un callback usando Thunk para obtener el estado\n        const { uid } = getState().auth;\n\n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n        const docRef = await db.collection(`${uid}/journal/notes`).add(newNote);\n        dispatch(activeNoteAction(docRef.id, newNote))\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nexport const startLoadingNotes = (uid) => async (dispatch) => {\n    const notes = await loadNotes(uid);\n    dispatch(setNotesAction(notes))\n};\n\nexport const startSaveNote = (note) => async (dispatch, getState) => {\n    try {\n        // getState() segundo argumento en un callback usando Thunk para obtener el estado\n        const { uid } = getState().auth;\n        if (!note.url) {\n            delete note.url\n        }\n        const noteToFirestore = { ...note };\n        delete noteToFirestore.id;\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore)\n        dispatch(refreshNoteAction(note.id, noteToFirestore));\n        Swal.fire('Saved', note.title, 'success')\n\n    } catch (e) {\n        console.error(e);\n        Swal.fire('Unsaved', 'System could not save the entry changes', 'error')\n    }\n};\n\nexport const startUploading = (file) => async (dispatch, getState) => {\n    try {\n        const { active: activeNote } = getState().notes;\n        const fileUrl = await fileUpload(file);\n    } catch (err) {\n        console.error(err)\n\n    }\n}\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { JournalEntries } from './JournalEntries';\nimport { startLogut } from '../../thunks/authThunk';\nimport { startNewNote } from '../../thunks/notesThunk';\n\nexport const SideBar = () => {\n\n    const { name } = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n\n    const handleLogout = () => {\n        dispatch(startLogut())\n    };\n\n    const handleAddNewEntry = () => {\n        dispatch(startNewNote());\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span className=\"ml-1\">{name}</span>\n                </h3>\n                <button\n                    className=\"btn\"\n                    onClick={handleLogout}>\n                    Logout\n                </button>\n            </div>\n            <div\n                onClick={handleAddNewEntry}\n                className=\"journal__new-entry\">\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">New entry</p>\n            </div>\n            <JournalEntries />\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { startSaveNote, startUploading } from '../../thunks/notesThunk';\n\nexport const NotesAppBar = () => {\n    const dispatch = useDispatch();\n    const { active: note } = useSelector(state => state.notes);\n\n    const handleSave = () => {\n        dispatch(startSaveNote(note))\n    };\n\n    const handleUploadPic = () => {\n        document.getElementById('fileSelector').click()\n    };\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            dispatch(startUploading(file))\n        }\n        \n        \n\n    }\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de agosto de 2021</span>\n            <input\n                id=\"fileSelector\"\n                name=\"filePic\"\n                type=\"file\"\n                style={{ display: 'none' }}\n                onChange={handleFileChange}\n            />\n            <div>\n                <button\n                    className=\"btn\"\n                    onClick={handleUploadPic}>\n                    Upload a picture\n                </button>\n                <button\n                    className=\"btn\"\n                    onClick={handleSave}\n                >\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { NotesAppBar } from './NotesAppBar';\nimport { useForm } from '../../hooks/useForm';\nimport { activeNoteAction } from '../../actions/notes';\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n    const { active: note } = useSelector(state => state.notes);\n    const [formValues, handleInputChange, reset] = useForm(note);\n    const { body, title } = formValues;\n    const refActiveId = useRef(note.id)\n\n    useEffect(() => {\n\n        if (note.id !== refActiveId.current) {\n            reset(note);\n            refActiveId.current = note.id\n        }\n\n    }, [note, reset])\n\n    useEffect(() => {\n        dispatch(activeNoteAction(formValues.id, { ...formValues }))\n\n    }, [formValues, dispatch])\n\n\n\n    return (\n        <div className=\"notes__main-content\">\n\n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input\n                    type=\"text\"\n                    placeholder=\"An awesome title\"\n                    className=\"notes__title-input\"\n                    name=\"title\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    value={title}\n                    onChange={handleInputChange}\n                />\n\n                <textarea\n                    className=\"notes__textarea\"\n                    placeholder=\"What happended today?\"\n                    name=\"body\"\n                    id=\"\"\n                    cols=\"30\"\n                    rows=\"10\"\n                    value={body}\n                    onChange={handleInputChange}\n                ></textarea>\n\n                {\n                    (note.url) &&\n                    <div className=\"notes__image\">\n                        <img src=\"https://wallpaperaccess.com/full/4545965.png\" alt=\"dragon ball z\" />\n\n                    </div>}\n\n\n\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br/>\n                or create a new entry!\n            </p>\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { SideBar } from './SideBar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { NothingSelected } from './NothingSelected';\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector(state => state.notes);\n    return (\n        <div className=\"journal__main-content\">\n            <SideBar />\n            <main>\n                {\n                    (active)\n                        ? <NoteScreen />\n                        : <NothingSelected />\n                }\n            </main>\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n\n}) => {\n\n    return (\n        <Route\n            {...rest}\n            component={props => (\n                (isAuthenticated)\n                    ? <Component {...props} />\n                    : <Redirect to=\"/auth/login\" />\n            )}\n        >\n\n        </Route>\n    )\n};\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n\n}) => {\n    return (\n        <Route\n            {...rest}\n            component={props => (\n                (isAuthenticated)\n                    ? <Redirect to=\"/\" />\n                    : <Component {...props} />\n            )}\n        >\n\n        </Route>\n    )\n};\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { firebase } from '../firebase/firebase-config';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\n\n\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { login } from '../actions/auth';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { startLoadingNotes } from '../thunks/notesThunk';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const [checking, setChecking] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n\n        firebase.auth().onAuthStateChanged( async (user) => {\n\n            if (user?.uid) {\n\n                dispatch(login(user.uid, user.displayName))\n                setIsLoggedIn(true)\n                dispatch(startLoadingNotes(user.uid))\n\n            } else {\n                setIsLoggedIn(false)\n            }\n            setChecking(false);\n        })\n\n    }, [dispatch, setChecking, setIsLoggedIn])\n\n    if (checking) {\n        return <h3>Wait...</h3>\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        path=\"/auth\"\n                        isAuthenticated={isLoggedIn}\n                        component={AuthRouter}\n                    />\n                    <PrivateRoute\n                        exact\n                        path=\"/\"\n                        isAuthenticated={isLoggedIn}\n                        component={JournalScreen}\n                    />\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from '../types/types';\n\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\nexport const uiReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case types.uiSetError:\n            return { ...state, msgError: payload }\n\n        case types.uiRemoveError:\n            return { ...state, msgError: null }\n        case types.uiStartLoading:\n            return { ...state, loading: true }\n        case types.uiFinishLoading:\n            return { ...state, loading: false }\n\n        default:\n            return state\n    }\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    notes: [],\n    active: null\n}\n\nexport const notesReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case types.notesActive:\n            return {\n                ...state,\n                active: { ...payload }\n            }\n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [...payload]\n            }\n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map(note => (\n                    //Si son iguales, es la nota que se tiene que actualizar\n                    note.id === payload.id ? payload.note : note\n                ))\n            }\n\n        default:\n            return state\n    }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from \"redux-thunk\";\n\nimport { authReducer } from '../reducers/authReducer';\nimport { uiReducer } from '../reducers/uiReducer';\nimport { notesReducer } from '../reducers/notesReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer\n});\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(thunk))\n)","import { types } from '../types/types';\n\n\nexport const authReducer = (state = {}, action) => {\n\n    switch (action.type) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            };\n        case types.logout:\n            return {};\n\n        default:\n            return state;\n    }\n\n}","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}